{"version":3,"sources":["components/Hint.js","components/InputNumber.js","components/GuessTryNumber.js","components/GuessHistory.js","components/NewGame.js","components/Instructions.js","components/DebugDiv.js","App.js","index.js"],"names":["Hint","hintText","className","style","InputNumber","gameOver","handleInput","currentGuessNumber","updateValue","styles","onSubmit","placeholder","type","min","max","value","onChange","disabled","GuessTryNumber","numberOfGuesses","GuessHistory","guessHistoryString","whiteSpace","NewGame","resetGame","backgroundColor","color","onClick","Instructions","DebugDiv","numberToGuess","App","state","setState","Math","floor","random","e","target","testNumber","dif","abs","console","log","preventDefault","this","marginTop","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1837f4a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Hint = ({ hintText }) => {\r\n  const styles = {\r\n    // backgroundColor: 'blue',\r\n    // color: 'yellow',\r\n  };\r\n  return (\r\n    <div className=\"block btn btn-warning\" style={styles}>\r\n      {hintText}\r\n    </div>\r\n  );\r\n};\r\n\r\nHint.propTypes = {\r\n  hintText: PropTypes.string.isRequired,\r\n};\r\nexport default Hint;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst InputNumber = ({ gameOver, handleInput, currentGuessNumber, updateValue }) => {\r\n  const styles = {\r\n    // backgroundColor: 'orange',\r\n    // color: 'black',\r\n  };\r\n  return (\r\n    <form onSubmit={handleInput}>\r\n      <input\r\n        placeholder=\"Type in your guess...\"\r\n        className=\"block form-control\"\r\n        type=\"number\"\r\n        min=\"1\"\r\n        max=\"100\"\r\n        value={currentGuessNumber}\r\n        onChange={updateValue}\r\n        style={styles}\r\n        disabled={gameOver}\r\n      />\r\n      <input\r\n        className=\"block btn btn-primary\"\r\n        style={styles}\r\n        type=\"submit\"\r\n        value=\"Make a guess!\"\r\n        disabled={gameOver}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nInputNumber.propTypes = {\r\n  currentGuessNumber: PropTypes.number.isRequired,\r\n  updateValue: PropTypes.func.isRequired,\r\n  handleInput: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default InputNumber;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GuessTryNumber = ({ numberOfGuesses }) => {\r\n  const styles = {\r\n    // color: 'white',\r\n  };\r\n  return (\r\n    <div className=\"block btn btn-danger\" style={styles}>\r\n      Number of guesses: {numberOfGuesses}\r\n    </div>\r\n  );\r\n};\r\n\r\nGuessTryNumber.propTypes = {\r\n  numberOfGuesses: PropTypes.number.isRequired,\r\n};\r\nexport default GuessTryNumber;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GuessHistory = ({ guessHistoryString }) => {\r\n  const styles = {\r\n    // backgroundColor: 'grey',\r\n    // color: 'black',\r\n    whiteSpace: 'nowrap',\r\n  };\r\n  return (\r\n    <div className=\"block btn btn-secondary\" style={styles}>\r\n      Guesses:\r\n      {guessHistoryString}\r\n    </div>\r\n  );\r\n};\r\n\r\nGuessHistory.propTypes = {\r\n  guessHistoryString: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GuessHistory;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NewGame = ({ resetGame }) => {\r\n  const styles = {\r\n    backgroundColor: 'blue',\r\n    color: 'black',\r\n  };\r\n  return (\r\n    <button className=\"block btn\" type=\"button\" style={styles} onClick={resetGame}>\r\n      NEW GAME\r\n    </button>\r\n  );\r\n};\r\n\r\nNewGame.propTypes = {\r\n  resetGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default NewGame;\r\n","import React from 'react';\r\n\r\nconst Instructions = () => {\r\n  const styles = {\r\n    // backgroundColor: 'pink',\r\n    // color: 'yellow',\r\n  };\r\n  return (\r\n    <div className=\"block btn btn-info\" style={styles}>\r\n      Instructions\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Instructions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DebugDiv = ({ numberToGuess }) => {\r\n  const styles = {\r\n    backgroundColor: 'green',\r\n    color: 'black',\r\n  };\r\n  return (\r\n    <div className=\"block btn\" style={styles}>\r\n      DebugDiv:\r\n      {numberToGuess}\r\n    </div>\r\n  );\r\n};\r\n\r\nDebugDiv.propTypes = {\r\n  numberToGuess: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default DebugDiv;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Hint from './components/Hint';\r\nimport InputNumber from './components/InputNumber';\r\nimport GuessTryNumber from './components/GuessTryNumber';\r\nimport GuessHistory from './components/GuessHistory';\r\nimport NewGame from './components/NewGame';\r\nimport Instructions from './components/Instructions';\r\nimport DebugDiv from './components/DebugDiv';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    numberToGuess: '',\r\n    currentGuessNumber: '',\r\n    hintText: \"I'll give you a hint\",\r\n    numberOfGuesses: 0,\r\n    guessHistoryString: '',\r\n    gameOver: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      numberToGuess: Math.floor(Math.random() * 100) + 1,\r\n    });\r\n  }\r\n\r\n  resetGame = () => {\r\n    this.setState({\r\n      numberToGuess: Math.floor(Math.random() * 100) + 1,\r\n      currentGuessNumber: '',\r\n      hintText: \"I'll give you a hint\",\r\n      numberOfGuesses: 0,\r\n      guessHistoryString: '',\r\n      gameOver: false,\r\n    });\r\n  };\r\n\r\n  updateValue = (e) => {\r\n    this.setState({\r\n      currentGuessNumber: e.target.value,\r\n    });\r\n  };\r\n\r\n  testNumber = () => {\r\n    let hintText;\r\n    const {\r\n      currentGuessNumber,\r\n      numberToGuess,\r\n      numberOfGuesses,\r\n      guessHistoryString,\r\n      gameOver,\r\n    } = this.state;\r\n    const dif = Math.abs(currentGuessNumber - numberToGuess);\r\n    switch (true) {\r\n      case dif > 0 && dif <= 5:\r\n        hintText = 'Almost got it!!!';\r\n        break;\r\n      case dif > 5 && dif <= 15:\r\n        hintText = 'You are close!';\r\n        break;\r\n      case dif > 10:\r\n        hintText = 'Far away...';\r\n        break;\r\n      default:\r\n        hintText = 'CORRECT!!!';\r\n    }\r\n\r\n    this.setState({\r\n      hintText,\r\n      numberOfGuesses: numberOfGuesses + 1,\r\n      guessHistoryString: `${guessHistoryString} ${currentGuessNumber}`,\r\n      currentGuessNumber: '',\r\n      gameOver: hintText === 'CORRECT!!!' ? true : false,\r\n    });\r\n    console.log(numberOfGuesses);\r\n    console.log(gameOver);\r\n  };\r\n\r\n  handleInput = (e) => {\r\n    const { currentGuessNumber } = this.state;\r\n    e.preventDefault();\r\n    console.log(`handleInput: ${currentGuessNumber} END`);\r\n    this.testNumber();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      hintText,\r\n      currentGuessNumber,\r\n      numberOfGuesses,\r\n      guessHistoryString,\r\n      gameOver,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <h1 style={{ color: 'white', marginTop: '40px' }}>Guess the number(1-100)!</h1>\r\n        <DebugDiv numberToGuess={this.state.numberToGuess} />\r\n        <Hint hintText={hintText} />\r\n        <InputNumber\r\n          currentGuessNumber={currentGuessNumber}\r\n          gameOver={gameOver}\r\n          updateValue={this.updateValue}\r\n          testNumber={this.testNumber}\r\n          handleInput={this.handleInput}\r\n        />\r\n        <GuessTryNumber numberOfGuesses={numberOfGuesses} />\r\n        <GuessHistory guessHistoryString={guessHistoryString} />\r\n        <NewGame resetGame={this.resetGame} />\r\n        <Instructions />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './style.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}