{"version":3,"sources":["components/Hint.js","components/InputNumber.js","components/GuessTryNumber.js","components/GuessHistory.js","components/NewGame.js","components/Instructions.js","App.js","index.js"],"names":["Hint","hintText","className","style","InputNumber","handleInput","currentGuessNumber","updateValue","styles","onSubmit","placeholder","type","min","max","value","onChange","onClick","GuessTryNumber","numberOfGuesses","GuessHistory","guessHistoryString","whiteSpace","NewGame","resetGame","backgroundColor","color","Instructions","App","state","numberToGuess","setState","Math","floor","random","e","target","testNumber","dif","abs","setTimeout","console","log","preventDefault","this","marginTop","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.350f25fc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Hint = ({ hintText }) => {\n  const styles = {\n    // backgroundColor: 'blue',\n    // color: 'yellow',\n  };\n  return (\n    <div className=\"block btn btn-warning\" style={styles}>\n      {hintText}\n    </div>\n  );\n};\n\nHint.propTypes = {\n  hintText: PropTypes.string.isRequired,\n};\nexport default Hint;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst InputNumber = ({ handleInput, currentGuessNumber, updateValue }) => {\n  const styles = {\n    // backgroundColor: 'orange',\n    // color: 'black',\n  };\n  return (\n    <form onSubmit={handleInput}>\n      <input\n        placeholder=\"Type in your guess...\"\n        className=\"block form-control\"\n        type=\"number\"\n        min=\"1\"\n        max=\"100\"\n        value={currentGuessNumber}\n        onChange={updateValue}\n        style={styles}\n      />\n      <input\n        className=\"block btn btn-primary\"\n        style={styles}\n        type=\"button\"\n        value=\"Make a guess!\"\n        onClick={handleInput}\n      />\n    </form>\n  );\n};\n\nInputNumber.propTypes = {\n  currentGuessNumber: PropTypes.number.isRequired,\n  updateValue: PropTypes.func.isRequired,\n  handleInput: PropTypes.func.isRequired,\n};\n\nexport default InputNumber;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GuessTryNumber = ({ numberOfGuesses }) => {\n  const styles = {\n    // color: 'white',\n  };\n  return (\n    <div className=\"block btn btn-danger\" style={styles}>\n      Number of guesses: {numberOfGuesses}\n    </div>\n  );\n};\n\nGuessTryNumber.propTypes = {\n  numberOfGuesses: PropTypes.number.isRequired,\n};\nexport default GuessTryNumber;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GuessHistory = ({ guessHistoryString }) => {\n  const styles = {\n    // backgroundColor: 'grey',\n    // color: 'black',\n    whiteSpace: 'nowrap',\n  };\n  return (\n    <div className=\"block btn btn-secondary\" style={styles}>\n      Guesses:\n      {guessHistoryString}\n    </div>\n  );\n};\n\nGuessHistory.propTypes = {\n  guessHistoryString: PropTypes.string.isRequired,\n};\n\nexport default GuessHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NewGame = ({ resetGame }) => {\n  const styles = {\n    backgroundColor: 'blue',\n    color: 'black',\n  };\n  return (\n    <button className=\"block btn\" type=\"button\" style={styles} onClick={resetGame}>\n      NEW GAME\n    </button>\n  );\n};\n\nNewGame.propTypes = {\n  resetGame: PropTypes.func.isRequired,\n};\n\nexport default NewGame;\n","import React from 'react';\n\nconst Instructions = () => {\n  const styles = {\n    // backgroundColor: 'pink',\n    // color: 'yellow',\n  };\n  return (\n    <div className=\"block btn btn-info\" style={styles}>\n      Instructions\n    </div>\n  );\n};\n\nexport default Instructions;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Hint from './components/Hint';\nimport InputNumber from './components/InputNumber';\nimport GuessTryNumber from './components/GuessTryNumber';\nimport GuessHistory from './components/GuessHistory';\nimport NewGame from './components/NewGame';\nimport Instructions from './components/Instructions';\n// import DebugDiv from './components/DebugDiv';\nimport './components/style.css';\n\nclass App extends Component {\n  state = {\n    numberToGuess: '',\n    currentGuessNumber: '',\n    hintText: \"I'll give you a hint\",\n    numberOfGuesses: 0,\n    guessHistoryString: '',\n  };\n\n  componentDidMount() {\n    this.setState({\n      numberToGuess: Math.floor(Math.random() * 100) + 1,\n    });\n  }\n\n  resetGame = () => {\n    this.setState({\n      numberToGuess: Math.floor(Math.random() * 100) + 1,\n      currentGuessNumber: '',\n      hintText: \"I'll give you a hint\",\n      numberOfGuesses: 0,\n      guessHistoryString: '',\n    });\n  };\n\n  updateValue = (e) => {\n    this.setState({\n      currentGuessNumber: e.target.value,\n    });\n  };\n\n  testNumber = () => {\n    let hintText;\n    const {\n      currentGuessNumber,\n      numberToGuess,\n      numberOfGuesses,\n      guessHistoryString,\n    } = this.state;\n    const dif = Math.abs(currentGuessNumber - numberToGuess);\n    switch (true) {\n      case dif <= 10 && dif > 0:\n        hintText = 'You are close!!!';\n        break;\n      case dif > 10:\n        hintText = 'Far away...';\n        break;\n      default:\n        hintText = 'CORRECT!!!';\n        setTimeout(() => {\n          this.resetGame();\n        }, 3000);\n    }\n\n    this.setState({\n      hintText,\n      numberOfGuesses: numberOfGuesses + 1,\n      guessHistoryString: `${guessHistoryString} ${currentGuessNumber}`,\n      currentGuessNumber: '',\n    });\n    console.log(numberOfGuesses);\n  };\n\n  handleInput = (e) => {\n    const { currentGuessNumber } = this.state;\n    e.preventDefault();\n    console.log(`handleInput: ${currentGuessNumber} END`);\n    this.testNumber();\n  };\n\n  render() {\n    const {\n      hintText,\n      currentGuessNumber,\n      numberOfGuesses,\n      guessHistoryString,\n    } = this.state;\n    return (\n      <>\n        <h1 style={{ color: 'white', marginTop: '40px' }}>Guess the number(1-100)!</h1>\n        {/* <DebugDiv numberToGuess={this.state.numberToGuess} /> */}\n        <Hint hintText={hintText} />\n        <InputNumber\n          currentGuessNumber={currentGuessNumber}\n          updateValue={this.updateValue}\n          testNumber={this.testNumber}\n          handleInput={this.handleInput}\n        />\n        <GuessTryNumber numberOfGuesses={numberOfGuesses} />\n        <GuessHistory guessHistoryString={guessHistoryString} />\n        <NewGame resetGame={this.resetGame} />\n        <Instructions />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}