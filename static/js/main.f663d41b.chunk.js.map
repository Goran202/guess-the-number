{"version":3,"sources":["components/Hint.js","components/InputNumber.js","components/GuessTryNumber.js","components/GuessHistory.js","components/NewGame.js","components/Instructions.js","App.js","index.js"],"names":["Hint","hintText","className","style","backgroundColor","color","InputNumber","gameOver","handleInput","currentGuessNumber","updateValue","onSubmit","placeholder","type","min","max","value","onChange","disabled","GuessTryNumber","numberOfGuesses","GuessHistory","guessHistoryString","whiteSpace","NewGame","resetGame","onClick","Instructions","App","state","numberToGuess","setState","Math","floor","random","e","target","testNumber","dif","abs","console","log","preventDefault","this","marginTop","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f663d41b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Hint = ({ hintText }) => {\r\n  const styles = {\r\n    backgroundColor: '#ffc107',\r\n    color: 'white',\r\n  };\r\n  return (\r\n    <div className=\"block notbtn\" style={styles}>\r\n      {hintText}\r\n    </div>\r\n  );\r\n};\r\n\r\nHint.propTypes = {\r\n  hintText: PropTypes.string.isRequired,\r\n};\r\nexport default Hint;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst InputNumber = ({ gameOver, handleInput, currentGuessNumber, updateValue }) => {\r\n  return (\r\n    <form onSubmit={handleInput}>\r\n      <input\r\n        placeholder=\"Type in your guess...\"\r\n        className=\"block form-control\"\r\n        type=\"number\"\r\n        min=\"1\"\r\n        max=\"100\"\r\n        value={currentGuessNumber}\r\n        onChange={updateValue}\r\n        disabled={gameOver}\r\n      />\r\n      <input\r\n        className=\"block btn btn-primary\"\r\n        type=\"submit\"\r\n        value=\"Make a guess!\"\r\n        disabled={gameOver}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nInputNumber.propTypes = {\r\n  currentGuessNumber: PropTypes.number.isRequired,\r\n  updateValue: PropTypes.func.isRequired,\r\n  handleInput: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default InputNumber;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GuessTryNumber = ({ numberOfGuesses }) => {\r\n  const styles = {\r\n    color: 'white',\r\n    backgroundColor: '#dc3545',\r\n  };\r\n  return (\r\n    <div className=\"block notbtn\" style={styles}>\r\n      Number of guesses: {numberOfGuesses}\r\n    </div>\r\n  );\r\n};\r\n\r\nGuessTryNumber.propTypes = {\r\n  numberOfGuesses: PropTypes.number.isRequired,\r\n};\r\nexport default GuessTryNumber;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GuessHistory = ({ guessHistoryString }) => {\r\n  const styles = {\r\n    backgroundColor: '#6c757d',\r\n    color: 'white',\r\n    whiteSpace: 'nowrap',\r\n  };\r\n  return (\r\n    <div className=\"block notbtn\" style={styles}>\r\n      Guesses:\r\n      {guessHistoryString}\r\n    </div>\r\n  );\r\n};\r\n\r\nGuessHistory.propTypes = {\r\n  guessHistoryString: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GuessHistory;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NewGame = ({ resetGame }) => {\r\n  const styles = {\r\n    backgroundColor: 'blue',\r\n    color: 'white',\r\n  };\r\n  return (\r\n    <button className=\"block btn\" type=\"button\" style={styles} onClick={resetGame}>\r\n      NEW GAME\r\n    </button>\r\n  );\r\n};\r\n\r\nNewGame.propTypes = {\r\n  resetGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default NewGame;\r\n","import React from 'react';\r\n\r\nconst Instructions = () => {\r\n  return <div className=\"block btn btn-info\">Instructions</div>;\r\n};\r\n\r\nexport default Instructions;\r\n","import React, { Component } from 'react';\r\n// import './App.css';\r\nimport Hint from './components/Hint';\r\nimport InputNumber from './components/InputNumber';\r\nimport GuessTryNumber from './components/GuessTryNumber';\r\nimport GuessHistory from './components/GuessHistory';\r\nimport NewGame from './components/NewGame';\r\nimport Instructions from './components/Instructions';\r\nimport DebugDiv from './components/DebugDiv';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    numberToGuess: '',\r\n    currentGuessNumber: '',\r\n    hintText: \"I'll give you a hint\",\r\n    numberOfGuesses: 0,\r\n    guessHistoryString: '',\r\n    gameOver: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      numberToGuess: Math.floor(Math.random() * 100) + 1,\r\n    });\r\n  }\r\n\r\n  resetGame = () => {\r\n    this.setState({\r\n      numberToGuess: Math.floor(Math.random() * 100) + 1,\r\n      currentGuessNumber: '',\r\n      hintText: \"I'll give you a hint\",\r\n      numberOfGuesses: 0,\r\n      guessHistoryString: '',\r\n      gameOver: false,\r\n    });\r\n  };\r\n\r\n  updateValue = (e) => {\r\n    this.setState({\r\n      currentGuessNumber: e.target.value,\r\n    });\r\n  };\r\n\r\n  testNumber = () => {\r\n    let hintText;\r\n    const {\r\n      currentGuessNumber,\r\n      numberToGuess,\r\n      numberOfGuesses,\r\n      guessHistoryString,\r\n      gameOver,\r\n    } = this.state;\r\n    const dif = Math.abs(currentGuessNumber - numberToGuess);\r\n    switch (true) {\r\n      case dif > 0 && dif <= 5:\r\n        hintText = 'Almost got it!!!';\r\n        break;\r\n      case dif > 5 && dif <= 15:\r\n        hintText = 'You are close!';\r\n        break;\r\n      case dif > 10:\r\n        hintText = 'Far away...';\r\n        break;\r\n      default:\r\n        hintText = 'CORRECT!!!';\r\n    }\r\n\r\n    this.setState({\r\n      hintText,\r\n      numberOfGuesses: numberOfGuesses + 1,\r\n      guessHistoryString: `${guessHistoryString} ${currentGuessNumber}`,\r\n      currentGuessNumber: '',\r\n      gameOver: hintText === 'CORRECT!!!' ? true : false,\r\n    });\r\n    console.log(numberOfGuesses);\r\n    console.log(gameOver);\r\n  };\r\n\r\n  handleInput = (e) => {\r\n    const { currentGuessNumber } = this.state;\r\n    e.preventDefault();\r\n    console.log(`handleInput: ${currentGuessNumber} END`);\r\n    this.testNumber();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      hintText,\r\n      currentGuessNumber,\r\n      numberOfGuesses,\r\n      guessHistoryString,\r\n      gameOver,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <h1 style={{ color: 'white', marginTop: '40px' }}>Guess the number (1-100)!</h1>\r\n        {/* <DebugDiv numberToGuess={this.state.numberToGuess} /> */}\r\n        <Hint hintText={hintText} />\r\n        <InputNumber\r\n          currentGuessNumber={currentGuessNumber}\r\n          gameOver={gameOver}\r\n          updateValue={this.updateValue}\r\n          testNumber={this.testNumber}\r\n          handleInput={this.handleInput}\r\n        />\r\n        <GuessTryNumber numberOfGuesses={numberOfGuesses} />\r\n        <GuessHistory guessHistoryString={guessHistoryString} />\r\n        <NewGame resetGame={this.resetGame} />\r\n        <Instructions />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './style.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}